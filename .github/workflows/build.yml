name: Build

on:
  push:
    branches: [ master ]
    tags:
      - v*
  pull_request:
    branches: [ master ]
  workflow_dispatch:
  

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
        
    - name: Get last tag
      id: last_tag
      uses: WyriHaximus/github-action-get-previous-tag@v1
        
    - name: Get the version
      id: get_version
      run: |
        shopt -s extglob
        echo ::set-output name=BRANCH::${GITHUB_REF#@(refs/tags/|refs/heads/)}
        echo ::set-output name=VERSION_PREFIX::${${{ steps.last_tag.outputs.tag }}#@v}
        if ! [[ $GITHUB_REF == refs/tags/* ]] ;
        then
            echo ::set-output name=VERSION_SUFFIX::build.${{ github.run_id }}
        fi
        
    - name: Restore nuget packages
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --configuration Release -p:VersionPrefix=${{ steps.get_version.outputs.VERSION_PREFIX }} --version-suffix '${{ steps.get_version.outputs.VERSION_SUFFIX }}'
      
    - name: Test
      run: dotnet test --no-build --configuration Release --verbosity normal
      
    - name: Benchmarks
      run: dotnet run --no-build --configuration Release --project Pidgin.Bench/Pidgin.Bench.csproj -- -f '*'
      
    - name: Pack
      run: dotnet pack --no-build --configuration Release -o nupkgs -p:VersionPrefix=${{ steps.get_version.outputs.VERSION_PREFIX }} --version-suffix '${{ steps.get_version.outputs.VERSION_SUFFIX }}'
      
    - uses: nikeee/docfx-action@v1.0.0
      with:
        args: Pidgin.Docs/docfx.json
        
    - name: Push nuget packages
      if: github.event_name != 'pull_request'
      run: |
        dotnet nuget push nupkgs/* --source https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_KEY }}
        dotnet nuget push nupkgs/* --source https://nuget.pkg.github.com/benjamin-hodgson/index.json -k ${{ secrets.GITHUB_TOKEN }}
        
    - uses: JamesIves/github-pages-deploy-action@4.1.1
      if: github.event_name != 'pull_request'
      with:
        branch: gh-pages
        folder: Pidgin.Docs/_site
        target-folder: ${{ steps.get_version.outputs.BRANCH }}
        
    - name: Create Github Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: nupkgs/*
        body_path: CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    - uses: actions/upload-artifact@v2
      with:
        name: nupkgs
        path: nupkgs
    
    - uses: actions/upload-artifact@v2
      with:
        name: BenchmarkDotNet.Artifacts
        path: BenchmarkDotNet.Artifacts
    
    - uses: actions/upload-artifact@v2
      with:
        name: Pidgin.Docs
        path: Pidgin.Docs/_site
